/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.myapp;

import com.codename1.components.ImageViewer;
import com.codename1.components.InteractionDialog;
import com.codename1.components.ToastBar;
import com.codename1.googlemaps.MapContainer;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.JSONParser;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.maps.Coord;
import com.codename1.ui.*;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.geom.Rectangle;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;

import com.codename1.ui.plaf.RoundRectBorder;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.spinner.Picker;
import com.codename1.ui.util.Resources;
import com.mycompany.myapp.entity.Prestataire;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;

import java.util.ArrayList;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class Localisation {

    private Form form;
    private Resources theme;
    private static final String HTML_API_KEY = "AIzaSyCpBZ4AjkZIoLWHnYYF5qsdQO5CTnCpcko";
    java.util.List<Map<String, Object>> allprestataire;
    Picker pickerservice;
    ArrayList<Prestataire> prestataires;
    InfiniteContainer ic;
    public Localisation(Resources theme) {
        this.theme = theme;
        form = new Form("Native Maps Test");
        form.setLayout(new BorderLayout());
        pickerservice = new Picker();
        final MapContainer cnt = new MapContainer(HTML_API_KEY);

        Style s = new Style();
        s.setFgColor(0xff0000);
        s.setBgTransparency(0);
        FontImage markerImg = FontImage.createMaterial(FontImage.MATERIAL_PLACE, s, Display.getInstance().convertToPixels(3));

        Button buttonrecherche = new Button("Recherche");
        Container root = LayeredLayout.encloseIn(
                BorderLayout.center(cnt),
                BorderLayout.south(
                        FlowLayout.encloseBottom(buttonrecherche,pickerservice)
                )
        );

        form.add(BorderLayout.CENTER, root);

    }

    public Form getForm() {
        return form;
    }

    private void getAllPrestataire() {
        try {
            ConnectionRequest req = new ConnectionRequest();
            req.setUrl(MyApplication.baseUrl + "/prestataire");
            req.setPost(false);
            req.addResponseListener(new ActionListener<NetworkEvent>() {
                @Override
                public void actionPerformed(NetworkEvent r) {
                    try {
                        Map<String, Object> res = new JSONParser().parseJSON(new InputStreamReader(new ByteArrayInputStream(r.getConnectionRequest().getResponseData()), "UTF-8"));
                        java.util.List<Map<String, Object>> allprestataire = (java.util.List<Map<String, Object>>) res.get("root");

                        for (Map<String, Object> p : allprestataire) {
                            System.out.println(allprestataire);
                            Prestataire prestataire = new Prestataire();
                            System.out.println((Double.parseDouble(p.get("id").toString())));
                            prestataire.setId((int) (Double.parseDouble(p.get("id").toString())));
                            prestataire.setNom(p.get("nom").toString());
                            prestataire.setPrenom(p.get("prenom").toString());
                            prestataire.setTel(p.get("telephone").toString());
                            prestataire.setEmail(p.get("email").toString());
                            if (p.get("description") != null) {
                                prestataire.setDescription(p.get("description").toString());
                            }
                            prestataire.setNbpiont((int) (Double.parseDouble(p.get("numberPiont").toString())));
                            prestataire.setService(p.get("dservice").toString());
                            prestataires.add(prestataire);
                            System.out.println(p);
                        }

                    } catch (Exception ex) {
                    }
                }
            });
            NetworkManager.getInstance().addToQueue(req);
        } catch (Exception ex) {
        }
    }

    private void getAllPrestataireByService(int idservice) {
        prestataires.removeAll(prestataires);
        try {
            ConnectionRequest req = new ConnectionRequest();
            req.setUrl(MyApplication.baseUrl + "/prestataire/getPrestatairByService/" + idservice);
            req.setPost(false);
            req.addResponseListener(new ActionListener<NetworkEvent>() {
                @Override
                public void actionPerformed(NetworkEvent r) {
                    try {
                        Map<String, Object> res = new JSONParser().parseJSON(new InputStreamReader(new ByteArrayInputStream(r.getConnectionRequest().getResponseData()), "UTF-8"));
                        allprestataire = (java.util.List<Map<String, Object>>) res.get("root");

                        for (Map<String, Object> p : allprestataire) {
                            System.out.println(allprestataire);
                            Prestataire prestataire = new Prestataire();
                            System.out.println((Double.parseDouble(p.get("id").toString())));
                            prestataire.setId((int) (Double.parseDouble(p.get("id").toString())));
                            prestataire.setNom(p.get("nom").toString());
                            prestataire.setPrenom(p.get("prenom").toString());
                            prestataire.setTel(p.get("telephone").toString());
                            prestataire.setEmail(p.get("email").toString());
                            if (p.get("description") != null) {
                                prestataire.setDescription(p.get("description").toString());
                            }
                            prestataire.setNbpiont((int) (Double.parseDouble(p.get("numberPiont").toString())));
                            prestataire.setService(p.get("dservice").toString());
                            prestataires.add(prestataire);
                            System.out.println(p);
                        }

                    } catch (Exception ex) {
                    }
                }
            });
            NetworkManager.getInstance().addToQueue(req);
        } catch (Exception ex) {
        }
    }
}
